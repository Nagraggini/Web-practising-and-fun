//Explicit √©rt√©k ad√°s.
var a;
a = 1;

//Implicit √©rt√©k ad√°s.
var b = 2;
//alert(a + b);

//Adatt√≠pusok(primit√≠vek)
var c = 3; //number
var d = 3.5; //float

var a = "Hello"; // dupla id√©z≈ëjel
var b = "Hello"; // szimpla id√©z≈ëjel
//A backtick (`) speci√°lis, mert enged v√°ltoz√≥beilleszt√©st √©s t√∂bbsoros sz√∂veget
let name = "Andrea";
var c = `Hello`; // backtick (templateliter√°l)

let message = `Hello, ${name}!`; // ‚Üí "Hello, Andrea!"
var g = true; //boolean
var i = null; //null
var j; //undefined

//Ciklusok

//If szerkezet
var ageOfGyula = 17;

//== √∂sszehasonl√≠t√≥ oper√°tor
// felki√°lt√≥jel= nem egyenl≈ë oper√°tor
if (ageOfGyula == 17) {
  //alert("Majdnem nagykor√∫.");
} else if (ageOfGyula < 18) {
  //alert("Gyula m√©g kiskor√∫.");
} else {
  //alert("Gyula m√°r nagykor√∫.");
}

//Switch szerkezet
var r = "Rudi4";
switch (r) {
  case "Rudi":
    //alert("Rudi egy kutya.");
    break;
  case "Mici":
    // alert("Mici egy macska.");
    break;
  default:
  //alert("Nem kutya, sem macska.");
}

switch (ageOfGyula) {
  case ageOfGyula === 17:
    /*== (egyenl≈ës√©g, laza √∂sszehasonl√≠t√°s)
        Automatikus t√≠pus√°talak√≠t√°st v√©gez.
        Ha a k√©t √©rt√©k nem ugyanaz a t√≠pus, JavaScript megpr√≥b√°lja √°tkonvert√°lni ≈ëket, hogy √∂ssze tudja hasonl√≠tani.
        Ez√©rt n√©ha v√°ratlan eredm√©nyt ad.
        */

    /*=== (szigor√∫ egyenl≈ës√©g)
        Nem v√©gez t√≠pus√°talak√≠t√°st.
        Csak akkor ad true-t, ha √©rt√©k √©s adatt√≠pus is megegyezik.*/

    // alert("Majdnem nagykor√∫.");
    break;
  case ageOfGyula > 18:
    //alert("Gyula m√°r nagykor√∫.");
    break;
  default:
  //alert("Gyula m√©g kiskor√∫.");
}

//T√∂mb√∂k
var fruits = ["grape", "apple", "banana"];
fruits.sort(); //rendez√©s

//alert(fruits[0]); //els≈ë elem ki√≠rat√°sa

//Primit√≠vek, referenci√°k, objektumok
var lista1 = ["alma", "k√∂rte", "makszem"];
var lista2 = ["alma", "k√∂rte", "makszem"];

//Objektumok=√ñsszetett adatt√≠pusok, nem egyszer≈± sz√°mok, vagy sz√∂vegek.

//alert(lista1 == lista2); //false, mert k√©t k√ºl√∂nb√∂z≈ë objektumra mutatnak, k√ºl√∂nb√∂z≈ë helyen vannak t√°rolva a mem√≥ri√°ban
//alert(lista1 === lista2); //false, mert k√©t k√ºl√∂nb√∂z≈ë objektumra mutatnak, k√ºl√∂nb√∂z≈ë helyen vannak t√°rolva a mem√≥ri√°ban

//Ciklusok
var a = 0;

while (a < 6) {
  alert("A √©rt√©ke kisebb, mint 6, mert a=  " + a);
  a = a + 1;
}
alert("Kil√©pt√ºnk a ciklusb√≥l, mert A √©rt√©ke: " + a);

/*
1. feladat ‚Äì √âletkor ellen≈ërz√©s
*/
//A prompt stringet ad vissza, ez√©rt Number()-ral sz√°mm√° kell alak√≠tani.
var age = Number(prompt("K√©rlek, add meg az √©letkorodat:"));

if (age < 14) {
  alert("Gyerek");
} else if (age >= 14 && age <= 17) {
  alert("Tizen√©ves");
} else {
  alert("Feln≈ëtt");
}

/*üçé 2. feladat ‚Äì Gy√ºm√∂lcs keres≈ë
Van egy t√∂mb:
var fruits = ["alma", "k√∂rte", "ban√°n", "narancs"];

A program:
K√©rjen be egy gy√ºm√∂lcsnevet (prompt-tal).
Ha a megadott gy√ºm√∂lcs benne van a t√∂mbben ‚Üí alert("Van ilyen gy√ºm√∂lcs!")
Ha nincs benne ‚Üí alert("Nincs ilyen gy√ºm√∂lcs!")

Haszn√°lhatsz:
fruits.includes(keresettGyumolcs)*/

var fruits = ["alma", "k√∂rte", "ban√°n", "narancs"];

var valasztottertek = prompt("V√°lasz egy gy√ºm√∂lcs√∂t:").toLowerCase();

if (fruits.includes(valasztottertek)) {
  alert("Van ilyen gy√ºm√∂lcs.");
} else {
  alert("Nincs ilyen gy√ºm√∂lcs.");
}

/*üîÅ 3. feladat ‚Äì Sz√°ml√°l√≥ ciklus
√çrj egy while ciklust, ami:
0-t√≥l indul,
minden l√©p√©sben ki√≠rja a sz√°mot (alert vagy console.log),
√©s 5-ig sz√°mol.
De ha a sz√°m 3, akkor √≠rja ki: "Ez a kedvenc sz√°mom!"
*/
var number = 0;

while (number <= 5) {
  alert(`A sz√°m: ${number}`);

  /*=== (szigor√∫ egyenl≈ës√©g)
        Nem v√©gez t√≠pus√°talak√≠t√°st.
        Csak akkor ad true-t, ha √©rt√©k √©s adatt√≠pus is megegyezik.*/

  if (number === 3) {
    alert("Ez a kedvenc sz√°mom.");
  }
  number++;
}
